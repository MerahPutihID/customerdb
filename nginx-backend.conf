# Nginx configuration for backend (bc.merahputih-id.com)
# Location: /etc/nginx/sites-available/bc.merahputih-id.com

upstream backend_servers {
    # PM2 managed NestJS instances
    server 127.0.0.1:5000;
    # Jika ada multiple instances, tambahkan disini:
    # server 127.0.0.1:5001;
    # server 127.0.0.1:5002;
}

server {
    listen 80;
    server_name bc.merahputih-id.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name bc.merahputih-id.com;

    # SSL Configuration (managed by certbot)
    ssl_certificate /etc/letsencrypt/live/bc.merahputih-id.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bc.merahputih-id.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Client max body size for file uploads
    client_max_body_size 100M;

    # Main API location
    location / {
        proxy_pass http://backend_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://customer.merahputih-id.com' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://customer.merahputih-id.com';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, X-Requested-With';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Static files (uploads, documents, etc)
    location /uploads/ {
        alias /var/www/bc.merahputih-id.com/uploads/;
        expires 1y;
        add_header Cache-Control "public";
        
        # Security: Only allow specific file types
        location ~* \.(jpg|jpeg|png|gif|pdf|doc|docx|xls|xlsx)$ {
            expires 1y;
            add_header Cache-Control "public";
        }
    }

    # Health check endpoint
    location /health {
        proxy_pass http://backend_servers/health;
        access_log off;
    }

    # Disable nginx version in headers
    server_tokens off;

    # Log files
    access_log /var/log/nginx/bc.merahputih-id.com.access.log;
    error_log /var/log/nginx/bc.merahputih-id.com.error.log;
}
